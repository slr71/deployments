---
- name: add pod-cleaner service account
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: pod-cleaner
        namespace: "{{ ns }}"
      automountServiceAccountToken: true

- name: create the pod-cleaner role
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: pod-cleaner
        namespace: "{{ ns }}"
      rules:
        - apiGroups: [""]
          resources: ["pods"]
          verbs: ["get", "watch", "list", "delete"]

- name: create the pod-cleaner role binding
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: pod-cleaner
        namespace: "{{ ns }}"
      subjects:
        - kind: ServiceAccount
          name: pod-cleaner
          namespace: "{{ ns }}"
      roleRef:
        kind: Role
        name: pod-cleaner
        apiVersion: rbac.authorization.k8s.io/v1  

- name: add cronjob to clean failed pods
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: CronJob
      metadata:
        name: cronjob-clean-failed-pods
        namespace: "{{ ns }}"
      spec:
        schedule: "*/5 * * * *"
        concurrencyPolicy: Forbid
        failedJobHistoryLimit: 4
        jobTemplate:
          spec:
            backoffLimit: 0
            parallelism: 1
            completions: 1
            template:
              spec:
                serviceAccountName: pod-cleaner
                restartPolicy: Never
                containers:
                  - name: clean-failed-jobs
                    image: bitnami/kubectl:1.29.2
                    imagePullPolicy: IfNotPresent
                    args: ["delete", "pods", "--field-selector", "status.phase=Failed"]

    
