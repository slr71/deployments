---
- name: install the cert-manager helm repo
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"
    state: present

- name: install the cert-manager chart
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    wait: true
    values:
      installCRDs: true
      prometheus:
        enabled: false

- name: wait for cert-manager deployment to be available
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: cert-manager
    name: cert-manager
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"
      reason: MinimumReplicasAvailable

- name: wait for cert-manager-webhook deployment to be available
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: cert-manager
    name: cert-manager-webhook
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"
      reason: MinimumReplicasAvailable

- name: wait for cert-manager-cainjector deployment to be available
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: cert-manager
    name: cert-manager-cainjector
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Available
      status: "True"
      reason: MinimumReplicasAvailable

- name: apply default-issuer
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ ns }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: default-issuer
      spec:
        selfSigned: {}

- name: apply default-cluster-issuer
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: default-cluster-issuer
      spec:
        selfSigned: {}
