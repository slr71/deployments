---
- name: install the irods CSI driver
  kubernetes.core.helm:
    create_namespace: true
    release_namespace: "{{ irods_csi_driver_namespace }}"
    release_name: irods-csi-driver
    chart_repo_url: https://cyverse.github.io/irods-csi-driver-helm/
    chart_ref: irods-csi-driver
    chart_version: "{{ irods_csi_driver_version }}"
    values:
      globalConfig:
        secret:
          stringData:
            client: "{{ irods_csi_driver_client }}"
            host: "{{ irods_csi_driver_host }}"
            port: "{{ irods_csi_driver_port | string }}"
            zone: "{{ irods_csi_driver_zone }}"
            user: "{{ irods_csi_driver_user}}"
            password: "{{ irods_csi_driver_password }}"
            retainData: "{{ irods_csi_driver_retain_data }}"
            enforceProxyAccess: "{{ irods_csi_driver_enforce_proxy_access }}"
            mountPathWhitelist: "{{ irods_csi_driver_mount_path_white_list }}"
      nodeService:
        irodsPlugin:
          poolServerEndpoint: "{{ irods_csi_driver_pool_server_endpoint }}"
        irodsPool:
          extraArgs:
            - "--cache_timeout_settings={{ irods_csi_driver_cache_timeout_settings }}"
            - "--cache_size_max={{ irods_csi_driver_cache_size_max }}"
            - "--data_root={{ irods_csi_driver_data_root }}"
      kubeletDir: "{{ irods_csi_driver_kubelet_dir }}"

- name: define the storage class for the iRODS CSI driver
  environment:
    KUBECONFIG: "{{ lookup('env', 'KUBECONFIG') }}"
  kubernetes.core.k8s:
    state: present
    definition:
      kind: StorageClass
      apiVersion: storage.k8s.io/v1
      metadata:
        name: irods-sc
      provisioner: irods.csi.cyverse.org
